	io/ioutil包:
	虽然 io 包提供了不少类型、方法和函数，但有时候使用起来不是那么方便。比如
读取一个文件中的所有内容。为此，标准库中提供了一些常用、方便的IO操作函数。

	1.1 NopCloser函数
		有时候我们需要传递一个 io.ReadCloser 的实例，而我们现在有一个 io.
	Reader 的实例。
		这个时候 NopCloser 就派上用场了。它包装一个io.Reader，返回一个 io.
	ReadCloser ，而相应的 Close 方法啥也不做，只是返回 nil。
	
	1.2 ReadAll 函数
		 func ReadAll(r io.Reader) ([]byte, error)
		它是通过 bytes.Buffer 中的 ReadFrom 来实现读取所有数据的.
		即创建一个Reader对象，用该对象调用ReadFrom读，然后再将使用该对象的
	Bytes方法，生成byte slice返回。
	
	1.3 ReadDir函数
		笔试题：编写程序输出某目录下的所有文件（包括子目录）
		是否见过这样的笔试题？
		
		其实在 ioutil 中提供了一个方便的函数：ReadDir，它读取目录并返回
	排好序的文件和子目录名（ []os.FileInfo ）。
	
		通过这个方法，我们可以很容易的实现“面试题”。
		
		虽然Windows系统下路径分隔符是反斜杠'\'，Go支持的目录中的路径分隔符
	必须是斜杠‘/’。
	
	
